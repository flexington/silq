### YamlMime:ManagedReference
items:
- uid: flx.SILQ.Core.Interpreter
  commentId: T:flx.SILQ.Core.Interpreter
  id: Interpreter
  parent: flx.SILQ.Core
  children:
  - flx.SILQ.Core.Interpreter.Interpret(System.Collections.Generic.List{flx.SILQ.Statements.Statement})
  - flx.SILQ.Core.Interpreter.Interpret(flx.SILQ.Expressions.Expression)
  - flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Binary)
  - flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Grouping)
  - flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Literal)
  - flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Unary)
  - flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Variable)
  - flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Statements.From)
  - flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Statements.Print)
  - flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Statements.Select)
  - flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Statements.Where)
  langs:
  - csharp
  - vb
  name: Interpreter
  nameWithType: Interpreter
  fullName: flx.SILQ.Core.Interpreter
  type: Class
  source:
    remote:
      path: dotnet/flx.SILQ/Core/Interpreter.Statement.cs
      branch: feat/sandr0-p/select
      repo: https://github.com/flexington/silq.git
    id: Interpreter
    path: ../dotnet/flx.SILQ/Core/Interpreter.Statement.cs
    startLine: 9
  assemblies:
  - flx.SILQ
  namespace: flx.SILQ.Core
  summary: Provides core evaluation logic for the SILQ interpreter, including arithmetic operations, type checking, and expression evaluation.
  example: []
  syntax:
    content: 'public class Interpreter : IVisitor<object>, IVisitor'
    content.vb: Public Class Interpreter Implements IVisitor(Of Object), IVisitor
  inheritance:
  - System.Object
  implements:
  - flx.SILQ.Expressions.IVisitor{System.Object}
  - flx.SILQ.Statements.IVisitor
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: flx.SILQ.Core.Interpreter.Interpret(flx.SILQ.Expressions.Expression)
  commentId: M:flx.SILQ.Core.Interpreter.Interpret(flx.SILQ.Expressions.Expression)
  id: Interpret(flx.SILQ.Expressions.Expression)
  parent: flx.SILQ.Core.Interpreter
  langs:
  - csharp
  - vb
  name: Interpret(Expression)
  nameWithType: Interpreter.Interpret(Expression)
  fullName: flx.SILQ.Core.Interpreter.Interpret(flx.SILQ.Expressions.Expression)
  type: Method
  source:
    remote:
      path: dotnet/flx.SILQ/Core/Interpreter.Base.cs
      branch: feat/sandr0-p/select
      repo: https://github.com/flexington/silq.git
    id: Interpret
    path: ../dotnet/flx.SILQ/Core/Interpreter.Base.cs
    startLine: 19
  assemblies:
  - flx.SILQ
  namespace: flx.SILQ.Core
  summary: Interprets the given expression by evaluating it and converting the result to a string.
  example: []
  syntax:
    content: public string Interpret(Expression expression)
    parameters:
    - id: expression
      type: flx.SILQ.Expressions.Expression
      description: The expression to interpret.
    return:
      type: System.String
      description: The string representation of the evaluated expression.
    content.vb: Public Function Interpret(expression As Expression) As String
  overload: flx.SILQ.Core.Interpreter.Interpret*
- uid: flx.SILQ.Core.Interpreter.Interpret(System.Collections.Generic.List{flx.SILQ.Statements.Statement})
  commentId: M:flx.SILQ.Core.Interpreter.Interpret(System.Collections.Generic.List{flx.SILQ.Statements.Statement})
  id: Interpret(System.Collections.Generic.List{flx.SILQ.Statements.Statement})
  parent: flx.SILQ.Core.Interpreter
  langs:
  - csharp
  - vb
  name: Interpret(List<Statement>)
  nameWithType: Interpreter.Interpret(List<Statement>)
  fullName: flx.SILQ.Core.Interpreter.Interpret(System.Collections.Generic.List<flx.SILQ.Statements.Statement>)
  type: Method
  source:
    remote:
      path: dotnet/flx.SILQ/Core/Interpreter.Base.cs
      branch: feat/sandr0-p/select
      repo: https://github.com/flexington/silq.git
    id: Interpret
    path: ../dotnet/flx.SILQ/Core/Interpreter.Base.cs
    startLine: 37
  assemblies:
  - flx.SILQ
  namespace: flx.SILQ.Core
  summary: >-
    Interprets a list of statements by executing each statement in order.

    Throws a <xref href="flx.SILQ.Errors.RuntimeError" data-throw-if-not-resolved="false"></xref> if an error occurs during execution.
  example: []
  syntax:
    content: public void Interpret(List<Statement> statements)
    parameters:
    - id: statements
      type: System.Collections.Generic.List{flx.SILQ.Statements.Statement}
      description: The list of statements to interpret.
    content.vb: Public Sub Interpret(statements As List(Of Statement))
  overload: flx.SILQ.Core.Interpreter.Interpret*
  nameWithType.vb: Interpreter.Interpret(List(Of Statement))
  fullName.vb: flx.SILQ.Core.Interpreter.Interpret(System.Collections.Generic.List(Of flx.SILQ.Statements.Statement))
  name.vb: Interpret(List(Of Statement))
- uid: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Literal)
  commentId: M:flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Literal)
  id: Visit(flx.SILQ.Expressions.Literal)
  parent: flx.SILQ.Core.Interpreter
  langs:
  - csharp
  - vb
  name: Visit(Literal)
  nameWithType: Interpreter.Visit(Literal)
  fullName: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Literal)
  type: Method
  source:
    remote:
      path: dotnet/flx.SILQ/Core/Interpreter.Expression.cs
      branch: feat/sandr0-p/select
      repo: https://github.com/flexington/silq.git
    id: Visit
    path: ../dotnet/flx.SILQ/Core/Interpreter.Expression.cs
    startLine: 16
  assemblies:
  - flx.SILQ
  namespace: flx.SILQ.Core
  summary: Visits a <xref href="flx.SILQ.Expressions.Literal" data-throw-if-not-resolved="false"></xref> expression and returns its value, converting to double if possible.
  example: []
  syntax:
    content: public object Visit(Literal literal)
    parameters:
    - id: literal
      type: flx.SILQ.Expressions.Literal
      description: The literal expression to evaluate.
    return:
      type: System.Object
      description: The value of the literal, possibly as a double.
    content.vb: Public Function Visit(literal As Literal) As Object
  overload: flx.SILQ.Core.Interpreter.Visit*
  implements:
  - flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Literal)
- uid: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Unary)
  commentId: M:flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Unary)
  id: Visit(flx.SILQ.Expressions.Unary)
  parent: flx.SILQ.Core.Interpreter
  langs:
  - csharp
  - vb
  name: Visit(Unary)
  nameWithType: Interpreter.Visit(Unary)
  fullName: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Unary)
  type: Method
  source:
    remote:
      path: dotnet/flx.SILQ/Core/Interpreter.Expression.cs
      branch: feat/sandr0-p/select
      repo: https://github.com/flexington/silq.git
    id: Visit
    path: ../dotnet/flx.SILQ/Core/Interpreter.Expression.cs
    startLine: 28
  assemblies:
  - flx.SILQ
  namespace: flx.SILQ.Core
  summary: Visits a <xref href="flx.SILQ.Expressions.Unary" data-throw-if-not-resolved="false"></xref> expression and evaluates it according to its operator.
  example: []
  syntax:
    content: public object Visit(Unary unary)
    parameters:
    - id: unary
      type: flx.SILQ.Expressions.Unary
      description: The unary expression to evaluate.
    return:
      type: System.Object
      description: The result of the unary operation.
    content.vb: Public Function Visit(unary As Unary) As Object
  overload: flx.SILQ.Core.Interpreter.Visit*
  implements:
  - flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Unary)
- uid: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Binary)
  commentId: M:flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Binary)
  id: Visit(flx.SILQ.Expressions.Binary)
  parent: flx.SILQ.Core.Interpreter
  langs:
  - csharp
  - vb
  name: Visit(Binary)
  nameWithType: Interpreter.Visit(Binary)
  fullName: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Binary)
  type: Method
  source:
    remote:
      path: dotnet/flx.SILQ/Core/Interpreter.Expression.cs
      branch: feat/sandr0-p/select
      repo: https://github.com/flexington/silq.git
    id: Visit
    path: ../dotnet/flx.SILQ/Core/Interpreter.Expression.cs
    startLine: 49
  assemblies:
  - flx.SILQ
  namespace: flx.SILQ.Core
  summary: Visits a <xref href="flx.SILQ.Expressions.Binary" data-throw-if-not-resolved="false"></xref> expression and evaluates it according to its operator and operands.
  example: []
  syntax:
    content: public object Visit(Binary binary)
    parameters:
    - id: binary
      type: flx.SILQ.Expressions.Binary
      description: The binary expression to evaluate.
    return:
      type: System.Object
      description: The result of the binary operation.
    content.vb: Public Function Visit(binary As Binary) As Object
  overload: flx.SILQ.Core.Interpreter.Visit*
  implements:
  - flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Binary)
- uid: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Grouping)
  commentId: M:flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Grouping)
  id: Visit(flx.SILQ.Expressions.Grouping)
  parent: flx.SILQ.Core.Interpreter
  langs:
  - csharp
  - vb
  name: Visit(Grouping)
  nameWithType: Interpreter.Visit(Grouping)
  fullName: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Grouping)
  type: Method
  source:
    remote:
      path: dotnet/flx.SILQ/Core/Interpreter.Expression.cs
      branch: feat/sandr0-p/select
      repo: https://github.com/flexington/silq.git
    id: Visit
    path: ../dotnet/flx.SILQ/Core/Interpreter.Expression.cs
    startLine: 90
  assemblies:
  - flx.SILQ
  namespace: flx.SILQ.Core
  summary: Visits a <xref href="flx.SILQ.Expressions.Grouping" data-throw-if-not-resolved="false"></xref> expression and evaluates its contained expression.
  example: []
  syntax:
    content: public object Visit(Grouping grouping)
    parameters:
    - id: grouping
      type: flx.SILQ.Expressions.Grouping
      description: The grouping expression to evaluate.
    return:
      type: System.Object
      description: The result of the evaluated grouping expression.
    content.vb: Public Function Visit(grouping As Grouping) As Object
  overload: flx.SILQ.Core.Interpreter.Visit*
  implements:
  - flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Grouping)
- uid: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Variable)
  commentId: M:flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Variable)
  id: Visit(flx.SILQ.Expressions.Variable)
  parent: flx.SILQ.Core.Interpreter
  langs:
  - csharp
  - vb
  name: Visit(Variable)
  nameWithType: Interpreter.Visit(Variable)
  fullName: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Expressions.Variable)
  type: Method
  source:
    remote:
      path: dotnet/flx.SILQ/Core/Interpreter.Expression.cs
      branch: feat/sandr0-p/select
      repo: https://github.com/flexington/silq.git
    id: Visit
    path: ../dotnet/flx.SILQ/Core/Interpreter.Expression.cs
    startLine: 100
  assemblies:
  - flx.SILQ
  namespace: flx.SILQ.Core
  summary: Visits a <xref href="flx.SILQ.Expressions.Variable" data-throw-if-not-resolved="false"></xref> expression and retrieves its value from the environment.
  example: []
  syntax:
    content: public object Visit(Variable variable)
    parameters:
    - id: variable
      type: flx.SILQ.Expressions.Variable
      description: The variable expression to evaluate.
    return:
      type: System.Object
      description: The value of the variable from the environment.
    content.vb: Public Function Visit(variable As Variable) As Object
  overload: flx.SILQ.Core.Interpreter.Visit*
  implements:
  - flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Variable)
- uid: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Statements.Print)
  commentId: M:flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Statements.Print)
  id: Visit(flx.SILQ.Statements.Print)
  parent: flx.SILQ.Core.Interpreter
  langs:
  - csharp
  - vb
  name: Visit(Print)
  nameWithType: Interpreter.Visit(Print)
  fullName: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Statements.Print)
  type: Method
  source:
    remote:
      path: dotnet/flx.SILQ/Core/Interpreter.Statement.cs
      branch: feat/sandr0-p/select
      repo: https://github.com/flexington/silq.git
    id: Visit
    path: ../dotnet/flx.SILQ/Core/Interpreter.Statement.cs
    startLine: 16
  assemblies:
  - flx.SILQ
  namespace: flx.SILQ.Core
  summary: >-
    Implements the visitor method for the <xref href="flx.SILQ.Statements.Print" data-throw-if-not-resolved="false"></xref> statement.

    Evaluates the expression and writes its string representation to the console.
  example: []
  syntax:
    content: public void Visit(Print print)
    parameters:
    - id: print
      type: flx.SILQ.Statements.Print
      description: The print statement to execute.
    content.vb: Public Sub Visit(print As Print)
  overload: flx.SILQ.Core.Interpreter.Visit*
  implements:
  - flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Print)
- uid: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Statements.From)
  commentId: M:flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Statements.From)
  id: Visit(flx.SILQ.Statements.From)
  parent: flx.SILQ.Core.Interpreter
  langs:
  - csharp
  - vb
  name: Visit(From)
  nameWithType: Interpreter.Visit(From)
  fullName: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Statements.From)
  type: Method
  source:
    remote:
      path: dotnet/flx.SILQ/Core/Interpreter.Statement.cs
      branch: feat/sandr0-p/select
      repo: https://github.com/flexington/silq.git
    id: Visit
    path: ../dotnet/flx.SILQ/Core/Interpreter.Statement.cs
    startLine: 26
  assemblies:
  - flx.SILQ
  namespace: flx.SILQ.Core
  summary: Implements the visitor method for the <xref href="flx.SILQ.Statements.From" data-throw-if-not-resolved="false"></xref> statement.
  example: []
  syntax:
    content: public void Visit(From from)
    parameters:
    - id: from
      type: flx.SILQ.Statements.From
      description: The "From" statement to process.
    content.vb: Public Sub Visit(from As From)
  overload: flx.SILQ.Core.Interpreter.Visit*
  implements:
  - flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.From)
- uid: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Statements.Where)
  commentId: M:flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Statements.Where)
  id: Visit(flx.SILQ.Statements.Where)
  parent: flx.SILQ.Core.Interpreter
  langs:
  - csharp
  - vb
  name: Visit(Where)
  nameWithType: Interpreter.Visit(Where)
  fullName: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Statements.Where)
  type: Method
  source:
    remote:
      path: dotnet/flx.SILQ/Core/Interpreter.Statement.cs
      branch: feat/sandr0-p/select
      repo: https://github.com/flexington/silq.git
    id: Visit
    path: ../dotnet/flx.SILQ/Core/Interpreter.Statement.cs
    startLine: 35
  assemblies:
  - flx.SILQ
  namespace: flx.SILQ.Core
  summary: Implements the visitor method for the <xref href="flx.SILQ.Statements.Where" data-throw-if-not-resolved="false"></xref> statement.
  example: []
  syntax:
    content: public void Visit(Where where)
    parameters:
    - id: where
      type: flx.SILQ.Statements.Where
      description: The "Where" statement to process.
    content.vb: Public Sub Visit(where As Where)
  overload: flx.SILQ.Core.Interpreter.Visit*
  implements:
  - flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Where)
- uid: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Statements.Select)
  commentId: M:flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Statements.Select)
  id: Visit(flx.SILQ.Statements.Select)
  parent: flx.SILQ.Core.Interpreter
  langs:
  - csharp
  - vb
  name: Visit(Select)
  nameWithType: Interpreter.Visit(Select)
  fullName: flx.SILQ.Core.Interpreter.Visit(flx.SILQ.Statements.Select)
  type: Method
  source:
    remote:
      path: dotnet/flx.SILQ/Core/Interpreter.Statement.cs
      branch: feat/sandr0-p/select
      repo: https://github.com/flexington/silq.git
    id: Visit
    path: ../dotnet/flx.SILQ/Core/Interpreter.Statement.cs
    startLine: 44
  assemblies:
  - flx.SILQ
  namespace: flx.SILQ.Core
  summary: Implements the visitor method for the <xref href="flx.SILQ.Statements.Select" data-throw-if-not-resolved="false"></xref> statement.
  example: []
  syntax:
    content: public void Visit(Select select)
    parameters:
    - id: select
      type: flx.SILQ.Statements.Select
      description: The "Select" statement to process.
    content.vb: Public Sub Visit([select] As [Select])
  overload: flx.SILQ.Core.Interpreter.Visit*
  implements:
  - flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Select)
references:
- uid: flx.SILQ.Core
  commentId: N:flx.SILQ.Core
  href: flx.html
  name: flx.SILQ.Core
  nameWithType: flx.SILQ.Core
  fullName: flx.SILQ.Core
  spec.csharp:
  - uid: flx
    name: flx
    href: flx.html
  - name: .
  - uid: flx.SILQ
    name: SILQ
    href: flx.SILQ.html
  - name: .
  - uid: flx.SILQ.Core
    name: Core
    href: flx.SILQ.Core.html
  spec.vb:
  - uid: flx
    name: flx
    href: flx.html
  - name: .
  - uid: flx.SILQ
    name: SILQ
    href: flx.SILQ.html
  - name: .
  - uid: flx.SILQ.Core
    name: Core
    href: flx.SILQ.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: flx.SILQ.Expressions.IVisitor{System.Object}
  commentId: T:flx.SILQ.Expressions.IVisitor{System.Object}
  parent: flx.SILQ.Expressions
  definition: flx.SILQ.Expressions.IVisitor`1
  href: flx.SILQ.Expressions.IVisitor-1.html
  name: IVisitor<object>
  nameWithType: IVisitor<object>
  fullName: flx.SILQ.Expressions.IVisitor<object>
  nameWithType.vb: IVisitor(Of Object)
  fullName.vb: flx.SILQ.Expressions.IVisitor(Of Object)
  name.vb: IVisitor(Of Object)
  spec.csharp:
  - uid: flx.SILQ.Expressions.IVisitor`1
    name: IVisitor
    href: flx.SILQ.Expressions.IVisitor-1.html
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: flx.SILQ.Expressions.IVisitor`1
    name: IVisitor
    href: flx.SILQ.Expressions.IVisitor-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: flx.SILQ.Statements.IVisitor
  commentId: T:flx.SILQ.Statements.IVisitor
  parent: flx.SILQ.Statements
  href: flx.SILQ.Statements.IVisitor.html
  name: IVisitor
  nameWithType: IVisitor
  fullName: flx.SILQ.Statements.IVisitor
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: flx.SILQ.Expressions.IVisitor`1
  commentId: T:flx.SILQ.Expressions.IVisitor`1
  href: flx.SILQ.Expressions.IVisitor-1.html
  name: IVisitor<T>
  nameWithType: IVisitor<T>
  fullName: flx.SILQ.Expressions.IVisitor<T>
  nameWithType.vb: IVisitor(Of T)
  fullName.vb: flx.SILQ.Expressions.IVisitor(Of T)
  name.vb: IVisitor(Of T)
  spec.csharp:
  - uid: flx.SILQ.Expressions.IVisitor`1
    name: IVisitor
    href: flx.SILQ.Expressions.IVisitor-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: flx.SILQ.Expressions.IVisitor`1
    name: IVisitor
    href: flx.SILQ.Expressions.IVisitor-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: flx.SILQ.Expressions
  commentId: N:flx.SILQ.Expressions
  href: flx.html
  name: flx.SILQ.Expressions
  nameWithType: flx.SILQ.Expressions
  fullName: flx.SILQ.Expressions
  spec.csharp:
  - uid: flx
    name: flx
    href: flx.html
  - name: .
  - uid: flx.SILQ
    name: SILQ
    href: flx.SILQ.html
  - name: .
  - uid: flx.SILQ.Expressions
    name: Expressions
    href: flx.SILQ.Expressions.html
  spec.vb:
  - uid: flx
    name: flx
    href: flx.html
  - name: .
  - uid: flx.SILQ
    name: SILQ
    href: flx.SILQ.html
  - name: .
  - uid: flx.SILQ.Expressions
    name: Expressions
    href: flx.SILQ.Expressions.html
- uid: flx.SILQ.Statements
  commentId: N:flx.SILQ.Statements
  href: flx.html
  name: flx.SILQ.Statements
  nameWithType: flx.SILQ.Statements
  fullName: flx.SILQ.Statements
  spec.csharp:
  - uid: flx
    name: flx
    href: flx.html
  - name: .
  - uid: flx.SILQ
    name: SILQ
    href: flx.SILQ.html
  - name: .
  - uid: flx.SILQ.Statements
    name: Statements
    href: flx.SILQ.Statements.html
  spec.vb:
  - uid: flx
    name: flx
    href: flx.html
  - name: .
  - uid: flx.SILQ
    name: SILQ
    href: flx.SILQ.html
  - name: .
  - uid: flx.SILQ.Statements
    name: Statements
    href: flx.SILQ.Statements.html
- uid: flx.SILQ.Core.Interpreter.Interpret*
  commentId: Overload:flx.SILQ.Core.Interpreter.Interpret
  href: flx.SILQ.Core.Interpreter.html#flx_SILQ_Core_Interpreter_Interpret_flx_SILQ_Expressions_Expression_
  name: Interpret
  nameWithType: Interpreter.Interpret
  fullName: flx.SILQ.Core.Interpreter.Interpret
- uid: flx.SILQ.Expressions.Expression
  commentId: T:flx.SILQ.Expressions.Expression
  parent: flx.SILQ.Expressions
  href: flx.SILQ.Expressions.Expression.html
  name: Expression
  nameWithType: Expression
  fullName: flx.SILQ.Expressions.Expression
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: flx.SILQ.Errors.RuntimeError
  commentId: T:flx.SILQ.Errors.RuntimeError
  href: flx.SILQ.Errors.RuntimeError.html
  name: RuntimeError
  nameWithType: RuntimeError
  fullName: flx.SILQ.Errors.RuntimeError
- uid: System.Collections.Generic.List{flx.SILQ.Statements.Statement}
  commentId: T:System.Collections.Generic.List{flx.SILQ.Statements.Statement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Statement>
  nameWithType: List<Statement>
  fullName: System.Collections.Generic.List<flx.SILQ.Statements.Statement>
  nameWithType.vb: List(Of Statement)
  fullName.vb: System.Collections.Generic.List(Of flx.SILQ.Statements.Statement)
  name.vb: List(Of Statement)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: flx.SILQ.Statements.Statement
    name: Statement
    href: flx.SILQ.Statements.Statement.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: flx.SILQ.Statements.Statement
    name: Statement
    href: flx.SILQ.Statements.Statement.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: flx.SILQ.Expressions.Literal
  commentId: T:flx.SILQ.Expressions.Literal
  parent: flx.SILQ.Expressions
  href: flx.SILQ.Expressions.Literal.html
  name: Literal
  nameWithType: Literal
  fullName: flx.SILQ.Expressions.Literal
- uid: flx.SILQ.Core.Interpreter.Visit*
  commentId: Overload:flx.SILQ.Core.Interpreter.Visit
  href: flx.SILQ.Core.Interpreter.html#flx_SILQ_Core_Interpreter_Visit_flx_SILQ_Expressions_Literal_
  name: Visit
  nameWithType: Interpreter.Visit
  fullName: flx.SILQ.Core.Interpreter.Visit
- uid: flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Literal)
  commentId: M:flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Literal)
  parent: flx.SILQ.Expressions.IVisitor{System.Object}
  definition: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Literal)
  href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Literal_
  name: Visit(Literal)
  nameWithType: IVisitor<object>.Visit(Literal)
  fullName: flx.SILQ.Expressions.IVisitor<object>.Visit(flx.SILQ.Expressions.Literal)
  nameWithType.vb: IVisitor(Of Object).Visit(Literal)
  fullName.vb: flx.SILQ.Expressions.IVisitor(Of Object).Visit(flx.SILQ.Expressions.Literal)
  spec.csharp:
  - uid: flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Literal)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Literal_
  - name: (
  - uid: flx.SILQ.Expressions.Literal
    name: Literal
    href: flx.SILQ.Expressions.Literal.html
  - name: )
  spec.vb:
  - uid: flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Literal)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Literal_
  - name: (
  - uid: flx.SILQ.Expressions.Literal
    name: Literal
    href: flx.SILQ.Expressions.Literal.html
  - name: )
- uid: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Literal)
  commentId: M:flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Literal)
  href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Literal_
  name: Visit(Literal)
  nameWithType: IVisitor<T>.Visit(Literal)
  fullName: flx.SILQ.Expressions.IVisitor<T>.Visit(flx.SILQ.Expressions.Literal)
  nameWithType.vb: IVisitor(Of T).Visit(Literal)
  fullName.vb: flx.SILQ.Expressions.IVisitor(Of T).Visit(flx.SILQ.Expressions.Literal)
  spec.csharp:
  - uid: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Literal)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Literal_
  - name: (
  - uid: flx.SILQ.Expressions.Literal
    name: Literal
    href: flx.SILQ.Expressions.Literal.html
  - name: )
  spec.vb:
  - uid: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Literal)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Literal_
  - name: (
  - uid: flx.SILQ.Expressions.Literal
    name: Literal
    href: flx.SILQ.Expressions.Literal.html
  - name: )
- uid: flx.SILQ.Expressions.Unary
  commentId: T:flx.SILQ.Expressions.Unary
  parent: flx.SILQ.Expressions
  href: flx.SILQ.Expressions.Unary.html
  name: Unary
  nameWithType: Unary
  fullName: flx.SILQ.Expressions.Unary
- uid: flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Unary)
  commentId: M:flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Unary)
  parent: flx.SILQ.Expressions.IVisitor{System.Object}
  definition: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Unary)
  href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Unary_
  name: Visit(Unary)
  nameWithType: IVisitor<object>.Visit(Unary)
  fullName: flx.SILQ.Expressions.IVisitor<object>.Visit(flx.SILQ.Expressions.Unary)
  nameWithType.vb: IVisitor(Of Object).Visit(Unary)
  fullName.vb: flx.SILQ.Expressions.IVisitor(Of Object).Visit(flx.SILQ.Expressions.Unary)
  spec.csharp:
  - uid: flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Unary)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Unary_
  - name: (
  - uid: flx.SILQ.Expressions.Unary
    name: Unary
    href: flx.SILQ.Expressions.Unary.html
  - name: )
  spec.vb:
  - uid: flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Unary)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Unary_
  - name: (
  - uid: flx.SILQ.Expressions.Unary
    name: Unary
    href: flx.SILQ.Expressions.Unary.html
  - name: )
- uid: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Unary)
  commentId: M:flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Unary)
  href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Unary_
  name: Visit(Unary)
  nameWithType: IVisitor<T>.Visit(Unary)
  fullName: flx.SILQ.Expressions.IVisitor<T>.Visit(flx.SILQ.Expressions.Unary)
  nameWithType.vb: IVisitor(Of T).Visit(Unary)
  fullName.vb: flx.SILQ.Expressions.IVisitor(Of T).Visit(flx.SILQ.Expressions.Unary)
  spec.csharp:
  - uid: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Unary)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Unary_
  - name: (
  - uid: flx.SILQ.Expressions.Unary
    name: Unary
    href: flx.SILQ.Expressions.Unary.html
  - name: )
  spec.vb:
  - uid: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Unary)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Unary_
  - name: (
  - uid: flx.SILQ.Expressions.Unary
    name: Unary
    href: flx.SILQ.Expressions.Unary.html
  - name: )
- uid: flx.SILQ.Expressions.Binary
  commentId: T:flx.SILQ.Expressions.Binary
  parent: flx.SILQ.Expressions
  href: flx.SILQ.Expressions.Binary.html
  name: Binary
  nameWithType: Binary
  fullName: flx.SILQ.Expressions.Binary
- uid: flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Binary)
  commentId: M:flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Binary)
  parent: flx.SILQ.Expressions.IVisitor{System.Object}
  definition: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Binary)
  href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Binary_
  name: Visit(Binary)
  nameWithType: IVisitor<object>.Visit(Binary)
  fullName: flx.SILQ.Expressions.IVisitor<object>.Visit(flx.SILQ.Expressions.Binary)
  nameWithType.vb: IVisitor(Of Object).Visit(Binary)
  fullName.vb: flx.SILQ.Expressions.IVisitor(Of Object).Visit(flx.SILQ.Expressions.Binary)
  spec.csharp:
  - uid: flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Binary)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Binary_
  - name: (
  - uid: flx.SILQ.Expressions.Binary
    name: Binary
    href: flx.SILQ.Expressions.Binary.html
  - name: )
  spec.vb:
  - uid: flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Binary)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Binary_
  - name: (
  - uid: flx.SILQ.Expressions.Binary
    name: Binary
    href: flx.SILQ.Expressions.Binary.html
  - name: )
- uid: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Binary)
  commentId: M:flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Binary)
  href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Binary_
  name: Visit(Binary)
  nameWithType: IVisitor<T>.Visit(Binary)
  fullName: flx.SILQ.Expressions.IVisitor<T>.Visit(flx.SILQ.Expressions.Binary)
  nameWithType.vb: IVisitor(Of T).Visit(Binary)
  fullName.vb: flx.SILQ.Expressions.IVisitor(Of T).Visit(flx.SILQ.Expressions.Binary)
  spec.csharp:
  - uid: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Binary)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Binary_
  - name: (
  - uid: flx.SILQ.Expressions.Binary
    name: Binary
    href: flx.SILQ.Expressions.Binary.html
  - name: )
  spec.vb:
  - uid: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Binary)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Binary_
  - name: (
  - uid: flx.SILQ.Expressions.Binary
    name: Binary
    href: flx.SILQ.Expressions.Binary.html
  - name: )
- uid: flx.SILQ.Expressions.Grouping
  commentId: T:flx.SILQ.Expressions.Grouping
  parent: flx.SILQ.Expressions
  href: flx.SILQ.Expressions.Grouping.html
  name: Grouping
  nameWithType: Grouping
  fullName: flx.SILQ.Expressions.Grouping
- uid: flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Grouping)
  commentId: M:flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Grouping)
  parent: flx.SILQ.Expressions.IVisitor{System.Object}
  definition: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Grouping)
  href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Grouping_
  name: Visit(Grouping)
  nameWithType: IVisitor<object>.Visit(Grouping)
  fullName: flx.SILQ.Expressions.IVisitor<object>.Visit(flx.SILQ.Expressions.Grouping)
  nameWithType.vb: IVisitor(Of Object).Visit(Grouping)
  fullName.vb: flx.SILQ.Expressions.IVisitor(Of Object).Visit(flx.SILQ.Expressions.Grouping)
  spec.csharp:
  - uid: flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Grouping)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Grouping_
  - name: (
  - uid: flx.SILQ.Expressions.Grouping
    name: Grouping
    href: flx.SILQ.Expressions.Grouping.html
  - name: )
  spec.vb:
  - uid: flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Grouping)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Grouping_
  - name: (
  - uid: flx.SILQ.Expressions.Grouping
    name: Grouping
    href: flx.SILQ.Expressions.Grouping.html
  - name: )
- uid: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Grouping)
  commentId: M:flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Grouping)
  href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Grouping_
  name: Visit(Grouping)
  nameWithType: IVisitor<T>.Visit(Grouping)
  fullName: flx.SILQ.Expressions.IVisitor<T>.Visit(flx.SILQ.Expressions.Grouping)
  nameWithType.vb: IVisitor(Of T).Visit(Grouping)
  fullName.vb: flx.SILQ.Expressions.IVisitor(Of T).Visit(flx.SILQ.Expressions.Grouping)
  spec.csharp:
  - uid: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Grouping)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Grouping_
  - name: (
  - uid: flx.SILQ.Expressions.Grouping
    name: Grouping
    href: flx.SILQ.Expressions.Grouping.html
  - name: )
  spec.vb:
  - uid: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Grouping)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Grouping_
  - name: (
  - uid: flx.SILQ.Expressions.Grouping
    name: Grouping
    href: flx.SILQ.Expressions.Grouping.html
  - name: )
- uid: flx.SILQ.Expressions.Variable
  commentId: T:flx.SILQ.Expressions.Variable
  parent: flx.SILQ.Expressions
  href: flx.SILQ.Expressions.Variable.html
  name: Variable
  nameWithType: Variable
  fullName: flx.SILQ.Expressions.Variable
- uid: flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Variable)
  commentId: M:flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Variable)
  parent: flx.SILQ.Expressions.IVisitor{System.Object}
  definition: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Variable)
  href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Variable_
  name: Visit(Variable)
  nameWithType: IVisitor<object>.Visit(Variable)
  fullName: flx.SILQ.Expressions.IVisitor<object>.Visit(flx.SILQ.Expressions.Variable)
  nameWithType.vb: IVisitor(Of Object).Visit(Variable)
  fullName.vb: flx.SILQ.Expressions.IVisitor(Of Object).Visit(flx.SILQ.Expressions.Variable)
  spec.csharp:
  - uid: flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Variable)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Variable_
  - name: (
  - uid: flx.SILQ.Expressions.Variable
    name: Variable
    href: flx.SILQ.Expressions.Variable.html
  - name: )
  spec.vb:
  - uid: flx.SILQ.Expressions.IVisitor{System.Object}.Visit(flx.SILQ.Expressions.Variable)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Variable_
  - name: (
  - uid: flx.SILQ.Expressions.Variable
    name: Variable
    href: flx.SILQ.Expressions.Variable.html
  - name: )
- uid: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Variable)
  commentId: M:flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Variable)
  href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Variable_
  name: Visit(Variable)
  nameWithType: IVisitor<T>.Visit(Variable)
  fullName: flx.SILQ.Expressions.IVisitor<T>.Visit(flx.SILQ.Expressions.Variable)
  nameWithType.vb: IVisitor(Of T).Visit(Variable)
  fullName.vb: flx.SILQ.Expressions.IVisitor(Of T).Visit(flx.SILQ.Expressions.Variable)
  spec.csharp:
  - uid: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Variable)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Variable_
  - name: (
  - uid: flx.SILQ.Expressions.Variable
    name: Variable
    href: flx.SILQ.Expressions.Variable.html
  - name: )
  spec.vb:
  - uid: flx.SILQ.Expressions.IVisitor`1.Visit(flx.SILQ.Expressions.Variable)
    name: Visit
    href: flx.SILQ.Expressions.IVisitor-1.html#flx_SILQ_Expressions_IVisitor_1_Visit_flx_SILQ_Expressions_Variable_
  - name: (
  - uid: flx.SILQ.Expressions.Variable
    name: Variable
    href: flx.SILQ.Expressions.Variable.html
  - name: )
- uid: flx.SILQ.Statements.Print
  commentId: T:flx.SILQ.Statements.Print
  parent: flx.SILQ.Statements
  href: flx.SILQ.Statements.Print.html
  name: Print
  nameWithType: Print
  fullName: flx.SILQ.Statements.Print
- uid: flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Print)
  commentId: M:flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Print)
  parent: flx.SILQ.Statements.IVisitor
  href: flx.SILQ.Statements.IVisitor.html#flx_SILQ_Statements_IVisitor_Visit_flx_SILQ_Statements_Print_
  name: Visit(Print)
  nameWithType: IVisitor.Visit(Print)
  fullName: flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Print)
  spec.csharp:
  - uid: flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Print)
    name: Visit
    href: flx.SILQ.Statements.IVisitor.html#flx_SILQ_Statements_IVisitor_Visit_flx_SILQ_Statements_Print_
  - name: (
  - uid: flx.SILQ.Statements.Print
    name: Print
    href: flx.SILQ.Statements.Print.html
  - name: )
  spec.vb:
  - uid: flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Print)
    name: Visit
    href: flx.SILQ.Statements.IVisitor.html#flx_SILQ_Statements_IVisitor_Visit_flx_SILQ_Statements_Print_
  - name: (
  - uid: flx.SILQ.Statements.Print
    name: Print
    href: flx.SILQ.Statements.Print.html
  - name: )
- uid: flx.SILQ.Statements.From
  commentId: T:flx.SILQ.Statements.From
  parent: flx.SILQ.Statements
  href: flx.SILQ.Statements.From.html
  name: From
  nameWithType: From
  fullName: flx.SILQ.Statements.From
- uid: flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.From)
  commentId: M:flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.From)
  parent: flx.SILQ.Statements.IVisitor
  href: flx.SILQ.Statements.IVisitor.html#flx_SILQ_Statements_IVisitor_Visit_flx_SILQ_Statements_From_
  name: Visit(From)
  nameWithType: IVisitor.Visit(From)
  fullName: flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.From)
  spec.csharp:
  - uid: flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.From)
    name: Visit
    href: flx.SILQ.Statements.IVisitor.html#flx_SILQ_Statements_IVisitor_Visit_flx_SILQ_Statements_From_
  - name: (
  - uid: flx.SILQ.Statements.From
    name: From
    href: flx.SILQ.Statements.From.html
  - name: )
  spec.vb:
  - uid: flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.From)
    name: Visit
    href: flx.SILQ.Statements.IVisitor.html#flx_SILQ_Statements_IVisitor_Visit_flx_SILQ_Statements_From_
  - name: (
  - uid: flx.SILQ.Statements.From
    name: From
    href: flx.SILQ.Statements.From.html
  - name: )
- uid: flx.SILQ.Statements.Where
  commentId: T:flx.SILQ.Statements.Where
  parent: flx.SILQ.Statements
  href: flx.SILQ.Statements.Where.html
  name: Where
  nameWithType: Where
  fullName: flx.SILQ.Statements.Where
- uid: flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Where)
  commentId: M:flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Where)
  parent: flx.SILQ.Statements.IVisitor
  href: flx.SILQ.Statements.IVisitor.html#flx_SILQ_Statements_IVisitor_Visit_flx_SILQ_Statements_Where_
  name: Visit(Where)
  nameWithType: IVisitor.Visit(Where)
  fullName: flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Where)
  spec.csharp:
  - uid: flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Where)
    name: Visit
    href: flx.SILQ.Statements.IVisitor.html#flx_SILQ_Statements_IVisitor_Visit_flx_SILQ_Statements_Where_
  - name: (
  - uid: flx.SILQ.Statements.Where
    name: Where
    href: flx.SILQ.Statements.Where.html
  - name: )
  spec.vb:
  - uid: flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Where)
    name: Visit
    href: flx.SILQ.Statements.IVisitor.html#flx_SILQ_Statements_IVisitor_Visit_flx_SILQ_Statements_Where_
  - name: (
  - uid: flx.SILQ.Statements.Where
    name: Where
    href: flx.SILQ.Statements.Where.html
  - name: )
- uid: flx.SILQ.Statements.Select
  commentId: T:flx.SILQ.Statements.Select
  parent: flx.SILQ.Statements
  href: flx.SILQ.Statements.Select.html
  name: Select
  nameWithType: Select
  fullName: flx.SILQ.Statements.Select
- uid: flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Select)
  commentId: M:flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Select)
  parent: flx.SILQ.Statements.IVisitor
  href: flx.SILQ.Statements.IVisitor.html#flx_SILQ_Statements_IVisitor_Visit_flx_SILQ_Statements_Select_
  name: Visit(Select)
  nameWithType: IVisitor.Visit(Select)
  fullName: flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Select)
  spec.csharp:
  - uid: flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Select)
    name: Visit
    href: flx.SILQ.Statements.IVisitor.html#flx_SILQ_Statements_IVisitor_Visit_flx_SILQ_Statements_Select_
  - name: (
  - uid: flx.SILQ.Statements.Select
    name: Select
    href: flx.SILQ.Statements.Select.html
  - name: )
  spec.vb:
  - uid: flx.SILQ.Statements.IVisitor.Visit(flx.SILQ.Statements.Select)
    name: Visit
    href: flx.SILQ.Statements.IVisitor.html#flx_SILQ_Statements_IVisitor_Visit_flx_SILQ_Statements_Select_
  - name: (
  - uid: flx.SILQ.Statements.Select
    name: Select
    href: flx.SILQ.Statements.Select.html
  - name: )
